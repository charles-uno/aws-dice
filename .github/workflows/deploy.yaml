name: deploy

on: [push, pull_request]

jobs:

  init_color:
    runs-on: ubuntu-latest
    name: make sure the color exists before the first time we try to load it
    steps:
      - shell: bash
        run: cp scripts/color-blue.yml color.yml
      - name: update color file
        uses: actions/upload-artifact@v2
        with:
          name: color-yml
          path: color.yml

  load_color:
    needs: init_color
    steps:
      - name: figure out which color we're deploying next
        uses: actions/download-artifact@v2
        with:
          name: color-yml
  build_images:
    needs: load_color
    steps:
    - name: build and push images
      env:
        DOCKER_PASS: ${{secrets.DOCKER_PASS}}
        DOCKER_USER: ${{secrets.DOCKER_USER}}
      run: scripts/build-images.sh
  deploy_files:
    runs-on: ubuntu-latest
    needs: load_color
    steps:
    - name: repo checkout
      uses: actions/checkout@v2
    - name: clean up previous scratch directory
      uses: fifsky/ssh-action@master
      with:
        command: rm -rf ~/scratch
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}
    - name: copy files to ~/scratch on aws
      uses: appleboy/scp-action@master
      with:
        host: ${{secrets.AWS_ADDRESS}}
        username: ec2-user
        key: ${{secrets.AWS_KEY}}
        target: "~/scratch/"
    - name: move files into place, process templates
      uses: fifsky/ssh-action@master
      with:
        command: scripts/apply-color.sh
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}
  refresh_service:
    needs:
    - build_images
    - deploy_files
    steps:
    - name: pull new images and restart docker compose
      uses: fifsky/ssh-action@master
      with:
        command: scripts/refresh-service.sh
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}

  test_service:
    needs: refresh_service
    steps:
    - name: integration tests for new service
      uses: fifsky/ssh-action@master
      with:
        command: scripts/test.sh
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}

# TODO: toggle which color is on root, which is on dev

  save_color:
    needs: test_service
    name: toggle the color after each successful deployment
    steps:
      - shell: bash
        run: scripts/toggle.sh
      - name: update color file
        uses: actions/upload-artifact@v2
        with:
          name: color-indicator
          path: color.txt
