name: deploy

on: [push, pull_request]

jobs:

  # NOTE: not clear if there's a way to persist blue/green status between runs,
  # so we do everything on the target server.

  deploy_files:
    runs-on: ubuntu-latest
    steps:
    - name: repo checkout
      uses: actions/checkout@v2
    - name: clean up previous workdir
      uses: fifsky/ssh-action@master
      with:
        command: |
          rm -rf ~/blue-green/workdir
          mkdir -p ~/blue-green/workdir
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}
    - name: copy repo over to ~/blue-green/workdir on aws
      uses: appleboy/scp-action@master
      with:
        host: ${{secrets.AWS_ADDRESS}}
        username: ec2-user
        key: ${{secrets.AWS_KEY}}
        source: "docker-compose-template.yml,scripts,front,back,nginx"
        target: "~/blue-green/workdir/"
    - name: determine which color we're deploying
      uses: fifsky/ssh-action@master
      with:
        command: cd blue-green/workdir && scripts/apply-color.sh
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}

  build_images:
    runs-on: ubuntu-latest
    needs: deploy_files
    steps:
    - name: build and push new images
      uses: fifsky/ssh-action@master
      env:
        DOCKER_PASS: ${{secrets.DOCKER_PASS}}
        DOCKER_USER: ${{secrets.DOCKER_USER}}
      with:
        command: cd blue-green/workdir && scripts/build-images.sh
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}
        envs: DOCKER_USER,DOCKER_PASS

  refresh_service:
    runs-on: ubuntu-latest
    needs: build_images
    steps:
    - name: restart docker compose
      uses: fifsky/ssh-action@master
      with:
        command: cd blue-green/workdir && scripts/refresh-service.sh
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}

  test_service:
    runs-on: ubuntu-latest
    needs: refresh_service
    steps:
    - name: integration tests for new service
      uses: fifsky/ssh-action@master
      with:
        command: cd blue-green/workdir && scripts/test.sh
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}

  toggle_color:
    runs-on: ubuntu-latest
    needs: test_service
    steps:
    - name: toggle which color to deploy next
      uses: fifsky/ssh-action@master
      with:
        command: cd blue-green/workdir && scripts/toggle-color.sh
        host: ${{secrets.AWS_ADDRESS}}
        user: ec2-user
        key: ${{secrets.AWS_KEY}}
